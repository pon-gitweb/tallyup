import React, { useEffect, useState } from 'react';
import { View, Text, StyleSheet, TouchableOpacity, ActivityIndicator, Alert } from 'react-native';
import { useNavigation } from '@react-navigation/native';
import { onAuthStateChanged } from 'firebase/auth';
import { auth } from '../services/firebase';
import { runDevBootstrapSilently, ensureDevMembership, ensureActiveSession } from '../services/devBootstrap';

export default function DashboardScreen() {
  const nav = useNavigation<any>();
  const [busy, setBusy] = useState(false);
  const [authed, setAuthed] = useState(false);

  useEffect(() => {
    const unsub = onAuthStateChanged(auth, (u) => {
      setAuthed(!!u);
      if (u) runDevBootstrapSilently();
    });
    return unsub;
  }, []);

  const onStartStockTake = async () => {
    if (!authed) {
      Alert.alert('Not signed in', 'Please log in first.');
      return;
    }
    setBusy(true);
    try {
      const { venueId, uid, email } = await ensureDevMembership();
      const sessionId = await ensureActiveSession(venueId);
      console.log('[TallyUp StartStockTake] navigating', { venueId, sessionId, uid, email });
      nav.navigate('DepartmentSelection', { venueId, sessionId });

        {/* Stock Control (inserted) */}
        <TouchableOpacity onPress={() => navigation.navigate('StockControl')} style={/* reuse same style block as the button above if you use styles.*; if inline, it's fine too */{ padding: 16, borderRadius: 12, borderWidth: 1, borderColor: '#E5E7EB', backgroundColor: '#F9FAFB', marginTop: 10 }}>
          <Text style={{ fontSize: 16, fontWeight: '800', textAlign: 'center' }}>Stock Control</Text>
        </TouchableOpacity>
    } catch (e: any) {
      console.warn('[TallyUp StartStockTake] Failed:', e?.message);
      Alert.alert('Setup issue', e?.message ?? 'Unknown error');
    } finally {
      setBusy(false);
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>TallyUp</Text>
      <View style={styles.buttons}>
        <TouchableOpacity style={styles.buttonPrimary} onPress={onStartStockTake} disabled={busy}>
          {busy ? <ActivityIndicator /> : <Text style={styles.buttonText}>Start / Return Stock Take</Text>}
        </TouchableOpacity>

        <TouchableOpacity style={styles.button} onPress={() => nav.navigate('Settings')}>
          <Text style={styles.buttonText}>Settings</Text>
        </TouchableOpacity>

        <TouchableOpacity style={styles.button} onPress={() => nav.navigate('Reports')}>
          <Text style={styles.buttonText}>Reports</Text>
        </TouchableOpacity>
      </View>
    </View>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1, padding: 24, justifyContent: 'center', backgroundColor: '#fff' },
  title: { fontSize: 28, fontWeight: '700', marginBottom: 24, textAlign: 'center' },
  buttons: { gap: 12 },
  button: { backgroundColor: '#222', padding: 16, borderRadius: 12, alignItems: 'center' },
  buttonPrimary: { backgroundColor: '#0A84FF', padding: 16, borderRadius: 12, alignItems: 'center' },
  buttonText: { color: '#fff', fontSize: 16, fontWeight: '600' },
});
